/*
 Navicat Premium Data Transfer

 Source Server         : 阿里云
 Source Server Type    : MySQL
 Source Server Version : 50736
 Source Host           : 120.79.220.218:3306
 Source Schema         : flybirds-nacos-config

 Target Server Type    : MySQL
 Target Server Version : 50736
 File Encoding         : 65001

 Date: 05/01/2023 11:46:59
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 189 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (26, 'application-dev.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    database: 0\n    host: ${flybirds.ip.redis}\n    port: 6379\n    password: ${flybirds.password.redis}\n    timeout: 6000ms  # 连接超时时长（毫秒）\n    jedis:\n      pool:\n        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）\n        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）\n        max-idle: 10      # 连接池中的最大空闲连接\n        min-idle: 5       # 连接池中的最小空闲连接\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: ${flybirds.user.druid}\n        loginPassword: ${flybirds.password.druid}\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,wall,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            name: flybirds-cloud\n            url: jdbc:mysql://${flybirds.ip.mysql}:3306/${spring.datasource.dynamic.datasource.master.name}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&nullCatalogMeansCurrent=true\n            username: ${flybirds.user.mysql}\n            password: ${flybirds.password.mysql}\n\n#终端配置草书\nflybirds:\n  user:\n    mysql: root\n    druid: admin\n  password:\n    mysql: flybirds@123\n    druid: flybirds@123\n    redis: flybirds@123\n  ip:\n    nacos: 120.79.220.218\n    mysql: 120.79.220.218\n    redis: 120.79.220.218\n    seata: 120.79.220.218\n    host: 119.91.25.140', 'daf647d097f2e4f85c0182e6a23a80e7', '2022-01-08 16:04:04', '2022-01-21 03:35:03', NULL, '183.236.95.242', '', '3f57c3a5-7575-4766-9ff3-51fc357a783f', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (27, 'flybirds-gateway-dev.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:\n    gateway:\n      discovery:\n       locator:\n         #动态路由，根据服务的名称转发到对应的微服务中\n         enabled: true #是否开启基于服务发现的路由规则\n         lower-case-service-id: true #是否服务名小写\n      routes:\n        # 系统模块\n        - id: flybirds-system\n          uri: lb://flybirds-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n            - name: RequestRateLimiter\n              args:\n                redis-rate-limiter.replenishRate: 1 # 令牌桶每秒填充速率\n                redis-rate-limiter.burstCapacity: 100 # 令牌桶总容量\n                key-resolver: \"#{@pathKeyResolver}\" # 使用 SpEL 表达式按名称引用 bean\n         # sms短信模块\n        - id: flybirds-sms\n          uri: lb://flybirds-sms\n          predicates:\n            - Path=/sms/**\n          filters:\n            - StripPrefix=1\n            - name: RequestRateLimiter\n              args:\n                redis-rate-limiter.replenishRate: 1 # 令牌桶每秒填充速率\n                redis-rate-limiter.burstCapacity: 100 # 令牌桶总容量\n                key-resolver: \"#{@pathKeyResolver}\" # 使用 SpEL 表达式按名称引用 bean\n        # 认证模块\n        - id: flybirds-oauth\n          uri: lb://flybirds-oauth\n          predicates:\n            - Path= /oauth2/**\n          filters:\n            # 配置工厂过滤器\n            - CacheRequestFilter\n            - VerificationCodeFilter\n            - StripPrefix=1\n            - name: BlackListUrlFilter\n              args:\n                blacklistUrl:\n                 - /oauth/*\n         # 代码生成\n        - id: flybirds-generate\n          uri: lb://flybirds-generate\n          predicates:\n            - Path=/tool/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: flybirds-job\n          uri: lb://flybirds-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: flybirds-mangefile\n          uri: lb://flybirds-mangefile\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n        # cms服务\n        - id: flybirds-cms\n          uri: lb://flybirds-cms\n          predicates:\n            - Path=/cms/**\n          filters:\n            - StripPrefix=1\n        # oss服务\n        - id: flybirds-oss\n          uri: lb://flybirds-oss\n          predicates:\n            - Path=/oss/**\n          filters:\n            - StripPrefix=1\n# 支持sentinel的熔断降级\nfeign:\n  sentinel:\n    enabled: true\n# 设置ribbon的超时时长\nribbon:\n  ReadTimeout: 4000\n  ConnectTimeout: 4000\n\n#springAdmin安全服务端口暴露            \nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\nlogging:\n  file:\n    name: logs/${spring.application.name}/info.log\n\n#白名单\nignore:\n  name: flybirds网关白名单 \n  whites:\n    - /actuator/**\n    - /oauth/**\n    - /oauth2/**\n    - /code\n    - /*/v2/api-docs\n    - /csrf\n    - /register/**\n    - /retrieve/**', '5a5d822c12e439261927116d3d702b17', '2022-01-08 16:04:04', '2022-01-08 16:10:37', NULL, '116.23.220.115', '', '3f57c3a5-7575-4766-9ff3-51fc357a783f', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (28, 'sentinel-degrade-gateway.json', 'DEFAULT_GROUP', '[\r\n    {\r\n        \"resource\": \"flybirds-system\",\r\n        \"count\": 500,\r\n        \"grade\": 0,\r\n        \"timeWindow\": 10,\r\n        \"minRequestAmount\": 100,\r\n        \"statIntervalMs\": 1000,\r\n        \"slowRatioThreshold\": 0.5\r\n    },\r\n    {\r\n        \"resource\": \"flybirds-generate\",\r\n        \"count\": 500,\r\n        \"grade\": 0,\r\n        \"timeWindow\": 10,\r\n        \"minRequestAmount\": 100,\r\n        \"statIntervalMs\": 1000,\r\n        \"slowRatioThreshold\": 0.5\r\n    },\r\n    {\r\n        \"resource\": \"flybirds-job\",\r\n        \"count\": 500,\r\n        \"grade\": 0,\r\n        \"timeWindow\": 10,\r\n        \"minRequestAmount\": 100,\r\n        \"statIntervalMs\": 1000,\r\n        \"slowRatioThreshold\": 0.5\r\n    },\r\n    {\r\n        \"resource\": \"flybirds-sms\",\r\n        \"count\": 500,\r\n        \"grade\": 0,\r\n        \"timeWindow\": 10,\r\n        \"minRequestAmount\": 100,\r\n        \"statIntervalMs\": 1000,\r\n        \"slowRatioThreshold\": 0.5\r\n    },\r\n    {\r\n        \"resource\": \"flybirds-media\",\r\n        \"count\": 500,\r\n        \"grade\": 0,\r\n        \"timeWindow\": 10,\r\n        \"minRequestAmount\": 100,\r\n        \"statIntervalMs\": 1000,\r\n        \"slowRatioThreshold\": 0.5\r\n    },\r\n    {\r\n        \"resource\": \"flybirds-mangefile\",\r\n        \"count\": 500,\r\n        \"grade\": 0,\r\n        \"timeWindow\": 10,\r\n        \"minRequestAmount\": 100,\r\n        \"statIntervalMs\": 1000,\r\n        \"slowRatioThreshold\": 0.5\r\n    },\r\n    {\r\n        \"resource\": \"flybirds-oauth\",\r\n        \"count\": 500,\r\n        \"grade\": 0,\r\n        \"timeWindow\": 10,\r\n        \"minRequestAmount\": 100,\r\n        \"statIntervalMs\": 1000,\r\n        \"slowRatioThreshold\": 0.5\r\n    }\r\n]', '674c435c2def0db3af0c85bbec04a672', '2022-01-08 16:04:04', '2022-01-08 16:04:04', NULL, '116.23.220.115', '', '3f57c3a5-7575-4766-9ff3-51fc357a783f', NULL, NULL, NULL, 'json', NULL);
INSERT INTO `config_info` VALUES (29, 'sentinel-flow-gateway.json', 'DEFAULT_GROUP', '[\n    {\n        \"resource\": \"flybirds-oauth\", \n        \"count\": 500,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"flybirds-system\",\n        \"count\": 1000,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"flybirds-gen\",\n        \"count\": 200,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"flybirds-job\",\n        \"count\": 300,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    }\n]', '0c50d69499fbf300cf1de5512bc8d4ef', '2022-01-08 16:04:04', '2022-01-08 16:04:04', NULL, '116.23.220.115', '', '3f57c3a5-7575-4766-9ff3-51fc357a783f', NULL, NULL, NULL, 'json', NULL);
INSERT INTO `config_info` VALUES (32, 'application-dev.yml', 'DEFAULT_GROUP', 'spring:\n  cache:\n    type: redis\n    ehcache:\n      config: classpath:ehcache-oauth.xml\n  redis:\n    database: 0\n    host: ${flybirds.ip.redis}\n    port: 6379\n    password: ${flybirds.password.redis}\n    jedis:\n      pool:\n        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）\n        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）\n        max-idle: 10      # 连接池中的最大空闲连接\n        min-idle: 5       # 连接池中的最小空闲连接\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: ${flybirds.user.druid}\n        loginPassword: ${flybirds.password.druid}\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,wall,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            name: flybirds-oauth\n            url: jdbc:mysql://${flybirds.ip.mysql}:3306/${spring.datasource.dynamic.datasource.master.name}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: ${flybirds.user.mysql}\n            password: ${flybirds.password.mysql}\n      # 开启seata代理\n      seata: true\n# seata配置\nseata:\n  enabled: true\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      flybirds-oauth-group: default\n    # 分组和 Seata 服务的映射\n    grouplist:\n      default: ${flybirds.ip.seata}:8091\n  config:\n    type: nacos\n    nacos:\n      serverAddr: ${flybirds.ip.nacos}:8848\n      group: SEATA_GROUP\n      namespace: ${flybirds.nacos.namespace.seata}\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: ${flybirds.ip.nacos}:8848\n      namespace: ${flybirds.nacos.namespace.seata}\n\n\n#web端配置\nflybirds:\n  user:\n    mysql: root\n    druid: admin\n  password:\n    mysql: flybirds@123\n    druid: flybirds@123\n    redis: flybirds@123\n  nacos:\n    namespace:\n      seata: 8f40f317-b4b1-40fa-a529-11c7f3b18701\n  ip:\n    nacos: 120.79.220.218\n    mysql: 120.79.220.218\n    redis: 120.79.220.218\n    seata: 120.79.220.218\n    host: 119.91.25.140 \n  info:\n    name: flying 数字化\n    version: 1.0.0.version\n    base-package: com.flybirds.oauth\n    copyrightYear: 2021\n    profile: /home/flybirds/data/profile\n    addressEnabled: true\n  file:\n    base-path:\n  xss:\n    enable: false\n    exclude-urls: # 如下两个 url，仅仅是为了演示，去掉配置也没关系\n      - ${spring.boot.admin.context-path}/** # 不处理 Spring Boot Admin 的请求\n      - ${management.endpoints.web.base-path}/** # 不处理 Actuator 的请求\n  # 开启演示模式\n  demo: \n     enable: false\n  web:\n    enable: false\n    api-prefix: /oauth2\n    controller-package: ${flybirds.info.base-package}\n  error-code: # 错误码相关配置项\n    constants-class-list:\n      - com.flybirds.common.constant.result.SysErrorCodeConstants\n      - com.flybirds.common.constant.result.InfErrorCodeConstants\n  security:\n    rememberMeSeconds: 604800\n  platform:\n    request-apilog:\n      enable: true\n      ignore-urls:\n         # 静态\n        - /webjars/**\n        - /swagger-resources/**\n        - /doc.html\n        - /v2/api-docs\n        - /css/**\n        - /index.html\n        - /img/**\n        - /fonts/**\n        - /favicon.ico\n        #业务apilog\n        - /actuator/**\n        - /druid/***\n        #登录\n        - /oauth2/**\n        - /oauth/**\n        - /token/**\n    sign:\n      enable: false\n      secret: 916lWh2WMcbSWiHv\n      ignore-urls:\n        - /webjars/**\n        - /swagger/**\n        - /swagger-ui.html\n        - /swagger-resources/**\n        - /swagger/**\n        - /**/v2/api-docs\n        - /**/v2/api-docs-ext\n        - /doc.html\n        - /**/*.js\n        - /**/*.css\n        - /**/*.png\n        - /**/*.ico\n        \n#auth配置操作\nauth:\n  ttl: 7200  #token存储到redis的过期时间\n  clientId: flybirds\n  clientSecret: flybirds\n  cookieDomain: localhost\n  cookieMaxAge: -1\n\n#Rsa加密配置\nencrypt:\n  key-store:\n    location: classpath:/flybirds.jks\n    secret: flybirds\n    alias: flybirds\n    password: flybirds\n\n# feign调用超时时间配置\nfeign:\n  client:\n    config:\n      default:\n        connectTimeout: 10000\n        readTimeout: 300000\n    \n#swagger-ui文档配置   \nswagger:\n  title: ${spring.application.name}模块接口文档\n  license: Powered By flybirds\n  licenseUrl: https://io.flybirds.com\n  authorization:\n    name: flybirds-oauth\n    auth-regex: ^.*$\n    authorization-scope-list:\n      - scope: web_service\n        description: 客户端认证系统服务\n    token-url-list:\n      - http://${flybirds.ip.host}:9903/oauth/login\n \n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'', '4f8c40126e9f16c0d015d3ec45cf9179', '2022-01-08 16:25:33', '2022-01-21 03:37:52', NULL, '183.236.95.242', 'flybirds-oauth', 'ce265606-207f-4d35-bfc4-2ff99c525ac0', '主要配置', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (39, 'application-dev.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    database: 0\n    host: ${flybirds.ip.redis}\n    port: 6379\n    password: ${flybirds.password.redis}\n    timeout: 6000ms  # 连接超时时长（毫秒）\n    jedis:\n      pool:\n        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）\n        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）\n        max-idle: 10      # 连接池中的最大空闲连接\n        min-idle: 5       # 连接池中的最小空闲连接\n  jackson:\n    serialization:\n     FAIL_ON_EMPTY_BEANS: false\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: ${flybirds.user.druid}\n        loginPassword: ${flybirds.password.druid}\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,wall,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            name: flybirds-cloud\n            url: jdbc:mysql://${flybirds.ip.mysql}:3306/${spring.datasource.dynamic.datasource.master.name}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&nullCatalogMeansCurrent=true\n            username: ${flybirds.user.mysql}\n            password: ${flybirds.password.mysql}\n          common:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            name: flybirds-common\n            url: jdbc:mysql://${flybirds.ip.mysql}:3306/${spring.datasource.dynamic.datasource.common.name}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&nullCatalogMeansCurrent=true\n            username: ${flybirds.user.mysql}\n            password: ${flybirds.password.mysql}\n      # 开启seata代理\n      seata: true\n  # 163邮箱服务\n  mail:\n    host: smtp.163.com\n    port:\n    username: haxdjf1917@163.com\n    password: KDBEDMCLSIHRNXCG\n    protocol: smtp\n    default-encoding: UTF-8\n    properties:\n      mail.smtp.auth: true\n      mail.smtp.starttls.enable: true\n      mail.smtp.starttls.required: true\n      mail.smtp.socketFactory.port: 465\n      mail.smtp.socketFactory.class: javax.net.ssl.SSLSocketFactory\n      mail.smtp.socketFactory.fallback: false\n# seata配置\nseata:\n  enabled: true\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      flybirds-system-group: default\n    # 分组和 Seata 服务的映射\n    grouplist:\n      default: ${flybirds.ip.seata}:8091\n  config:\n    type: nacos\n    nacos:\n      serverAddr: ${flybirds.ip.nacos}:8848\n      group: SEATA_GROUP\n      namespace: ${flybirds.nacos.namespace.seata}\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: ${flybirds.ip.nacos}:8848\n      namespace: ${flybirds.nacos.namespace.seata}\n\nmybatis-plus:\n  # 对应的 XML 文件位置\n  mapperLocations: classpath*:/com/flybirds/**/mapper/xml/*.xml\n  # 实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.flybirds.**.entity\n  # 针对 typeAliasesPackage，如果配置了该属性，则仅仅会扫描路径下以该类作为父类的域对象\n  #typeAliasesSuperType: Class<?>\n  # 如果配置了该属性，SqlSessionFactoryBean 会把该包下面的类注册为对应的 TypeHandler\n  #typeHandlersPackage: null\n  # 如果配置了该属性，会将路径下的枚举类进行注入，让实体类字段能够简单快捷的使用枚举属性\n  #typeEnumsPackage: null\n  # 启动时是否检查 MyBatis XML 文件的存在，默认不检查\n  checkConfigLocation: false\n  # 通过该属性可指定 MyBatis 的执行器，MyBatis 的执行器总共有三种：\n  # SIMPLE：该执行器类型不做特殊的事情，为每个语句的执行创建一个新的预处理语句（PreparedStatement）\n  # REUSE：该执行器类型会复用预处理语句（PreparedStatement）\n  # BATCH：该执行器类型会批量执行所有的更新语句\n  executorType: SIMPLE\n  # 指定外部化 MyBatis Properties 配置，通过该配置可以抽离配置，实现不同环境的配置部署\n  configurationProperties: null\n  configuration:\n    # 自动驼峰命名规则（camel case）映射\n    # 如果您的数据库命名符合规则无需使用 @TableField 注解指定数据库字段名\n    mapUnderscoreToCamelCase: true\n    # 默认枚举处理类,如果配置了该属性,枚举将统一使用指定处理器进行处理\n    # org.apache.ibatis.type.EnumTypeHandler : 存储枚举的名称\n    # org.apache.ibatis.type.EnumOrdinalTypeHandler : 存储枚举的索引\n    # com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler : 枚举类需要实现IEnum接口或字段标记@EnumValue注解.\n    defaultEnumTypeHandler: org.apache.ibatis.type.EnumTypeHandler\n    # 当设置为 true 的时候，懒加载的对象可能被任何懒属性全部加载，否则，每个属性都按需加载。需要和 lazyLoadingEnabled 一起使用。\n    aggressiveLazyLoading: true\n    # MyBatis 自动映射策略\n    # NONE：不启用自动映射\n    # PARTIAL：只对非嵌套的 resultMap 进行自动映射\n    # FULL：对所有的 resultMap 都进行自动映射\n    autoMappingBehavior: PARTIAL\n    # MyBatis 自动映射时未知列或未知属性处理策\n    # NONE：不做任何处理 (默认值)\n    # WARNING：以日志的形式打印相关警告信息\n    # FAILING：当作映射失败处理，并抛出异常和详细信息\n    autoMappingUnknownColumnBehavior: NONE\n    # Mybatis一级缓存，默认为 SESSION\n    # SESSION session级别缓存，同一个session相同查询语句不会再次查询数据库\n    # STATEMENT 关闭一级缓存\n    localCacheScope: SESSION\n    # 开启Mybatis二级缓存，默认为 true\n    cacheEnabled: true\n  global-config:\n    # 是否打印 Logo banner\n    banner: true\n    # 是否初始化 SqlRunner\n    enableSqlRunner: false\n    dbConfig:\n      # 主键类型\n      # AUTO 数据库ID自增\n      # NONE 空\n      # INPUT 用户输入ID\n      # ASSIGN_ID 全局唯一ID\n      # ASSIGN_UUID 全局唯一ID UUID\n      idType: AUTO\n      # 表名前缀\n      tablePrefix: null\n      # 字段 format,例: %s,(对主键无效)\n      columnFormat: null\n      # 表名是否使用驼峰转下划线命名,只对表名生效\n      tableUnderline: true\n      # 大写命名,对表名和字段名均生效\n      capitalMode: false\n      # 全局的entity的逻辑删除字段属性名\n      logicDeleteField: null\n      # 逻辑已删除值\n      logicDeleteValue: 1\n      # 逻辑未删除值\n      logicNotDeleteValue: 0\n      # 字段验证策略之 insert,在 insert 的时候的字段验证策略\n      # IGNORED 忽略判断\n      # NOT_NULL 非NULL判断\n      # NOT_EMPTY 非空判断(只对字符串类型字段,其他类型字段依然为非NULL判断)\n      # DEFAULT 默认的,一般只用于注解里\n      # NEVER 不加入 SQL\n      insertStrategy: NOT_NULL\n      # 字段验证策略之 update,在 update 的时候的字段验证策略\n      updateStrategy: NOT_NULL\n      # 字段验证策略之 select,在 select 的时候的字段验证策略既 wrapper 根据内部 entity 生成的 where 条件\n      selectStrategy: NOT_NULL\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: true\n  supportMethodsArguments: true\n  params: count=countSql\n\n\n#web端配置\nflybirds:\n  user:\n    mysql: root\n    druid: admin\n  password:\n    mysql: flybirds@123\n    druid: flybirds@123\n    redis: flybirds@123\n  nacos:\n    namespace:\n      seata: 8f40f317-b4b1-40fa-a529-11c7f3b18701\n  ip:\n    nacos: 120.79.220.218\n    mysql: 120.79.220.218\n    redis: 120.79.220.218\n    seata: 120.79.220.218\n    host: 119.91.25.140\n  info:\n    name: flying数字化\n    version: 1.0.0.version\n    base-package: com.flybirds.system\n    copyrightYear: 2021\n    profile: /home/flybirds/data/profile\n    addressEnabled: true\n  file:\n    base-path: \n  xss:\n    enable: false\n    exclude-urls: # 如下两个 url，仅仅是为了演示，去掉配置也没关系\n      - ${spring.boot.admin.context-path}/** # 不处理 Spring Boot Admin 的请求\n      - ${management.endpoints.web.base-path}/** # 不处理 Actuator 的请求\n  # 开启演示模式\n  demo: \n    enable: false\n  web:\n    enable: false\n    api-prefix: /system\n    controller-package: ${flybirds.info.base-package}\n  error-code: # 错误码相关配置项\n    constants-class-list:\n      - com.flybirds.common.constant.result.SysErrorCodeConstants\n      - com.flybirds.common.constant.result.InfErrorCodeConstants\n  security:\n    rememberMeSeconds: 604800\n  platform:\n    front:\n      baseUrl: http://${flybirds.ip.host}:80/\n      resetPwdUrl: http://${flybirds.ip.host}:80/forget/password?code={}&email={}\n      updateEmailUrl: http://${flybirds.ip.host}:80/account/validate?type=updateEmail&code={}&email={}\n    request-apilog:\n      enable: true\n      ignore-urls:\n        # 静态\n        - /webjars/**\n        - /swagger-resources/**\n        - /doc.html\n        - /v2/api-docs\n        - /css/**\n        - /index.html\n        - /img/**\n        - /fonts/**\n        - /favicon.ico\n        #业务apilog\n        - /api/**\n        - /operlog/**\n        - /actuator/**\n        - /user/**\n        - /logininfor/**\n        - /register\n        - /retrieve/**\n        - /dict/**\n        - /menu/**\n        # 登录\n        - /oauth/**\n        - /token/**\n        # 数据库\n        - /druid/**\n    sign:\n      enable: false\n      secret: 916lWh2WMcbSWiHv\n      ignore-urls:\n        - /webjars/**\n        - /swagger/**\n        - /swagger-ui.html\n        - /swagger-resources/**\n        - /swagger/**\n        - /**/v2/api-docs\n        - /**/v2/api-docs-ext\n        - /doc.html\n        - /**/*.js\n        - /**/*.css\n        - /**/*.png\n        - /**/*.ico\n\n#swagger-ui文档配置   \nswagger:\n  title: ${spring.application.name}模块接口文档\n  license: Powered By flybirds\n  licenseUrl: https://io.flybirds.com\n  authorization:\n    name: flybirds-oauth\n    auth-regex: ^.*$\n    authorization-scope-list:\n      - scope: web_service\n        description: 客户端认证系统服务\n    token-url-list:\n      - http://${flybirds.ip.host}:9903/oauth/login\n\n# open-fengin hystrix 配置更改     \nfeign:\n  hystrix:\n    enabled: true\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          thread:\n            timeoutInMilliseconds: 60000\n          strategy: SEMAPHORE\n          \n# Actuator 监控端点的配置项\nmanagement:\n  endpoints:\n    web:\n      base-path: /actuator # Actuator 提供的 API 接口的根目录。默认为 /actuator\n      exposure:\n        include: \'*\' # 需要开放的端点。默认值只打开 health 和 info 两个端点。通过设置 * ，可以开放所有端点。\n  endpoint:\n    health:\n      show-details: always\n  health:\n    redis:\n      enabled: false', 'e14231e3bc10ad48c0d53f4048050ab7', '2022-01-09 04:47:17', '2022-01-21 03:39:02', NULL, '183.236.95.242', '', 'a83602ef-7576-4b2f-a014-88db9b28c2d4', 'flybirds-system-配置', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (50, 'transport.type', 'SEATA_GROUP', 'TCP', 'b136ef5f6a01d816991fe3cf7a6ac763', '2022-01-09 15:42:36', '2022-01-09 15:42:36', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (51, 'transport.server', 'SEATA_GROUP', 'NIO', 'b6d9dfc0fb54277321cebc0fff55df2f', '2022-01-09 15:42:36', '2022-01-09 15:42:36', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (52, 'transport.heartbeat', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2022-01-09 15:42:36', '2022-01-09 15:42:36', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (53, 'transport.enableClientBatchSendRequest', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-01-09 15:42:36', '2022-01-09 15:42:36', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (54, 'transport.threadFactory.bossThreadPrefix', 'SEATA_GROUP', 'NettyBoss', '0f8db59a3b7f2823f38a70c308361836', '2022-01-09 15:42:36', '2022-01-09 15:42:36', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (55, 'transport.threadFactory.workerThreadPrefix', 'SEATA_GROUP', 'NettyServerNIOWorker', 'a78ec7ef5d1631754c4e72ae8a3e9205', '2022-01-09 15:42:36', '2022-01-09 15:42:36', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (56, 'transport.threadFactory.serverExecutorThreadPrefix', 'SEATA_GROUP', 'NettyServerBizHandler', '11a36309f3d9df84fa8b59cf071fa2da', '2022-01-09 15:42:36', '2022-01-09 15:42:36', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (57, 'transport.threadFactory.shareBossWorker', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-01-09 15:42:36', '2022-01-09 15:42:36', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (58, 'transport.threadFactory.clientSelectorThreadPrefix', 'SEATA_GROUP', 'NettyClientSelector', 'cd7ec5a06541e75f5a7913752322c3af', '2022-01-09 15:42:37', '2022-01-09 15:42:37', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (59, 'transport.threadFactory.clientSelectorThreadSize', 'SEATA_GROUP', '1', 'c4ca4238a0b923820dcc509a6f75849b', '2022-01-09 15:42:37', '2022-01-09 15:42:37', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (60, 'transport.threadFactory.clientWorkerThreadPrefix', 'SEATA_GROUP', 'NettyClientWorkerThread', '61cf4e69a56354cf72f46dc86414a57e', '2022-01-09 15:42:37', '2022-01-09 15:42:37', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (61, 'transport.threadFactory.bossThreadSize', 'SEATA_GROUP', '1', 'c4ca4238a0b923820dcc509a6f75849b', '2022-01-09 15:42:37', '2022-01-09 15:42:37', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (62, 'transport.threadFactory.workerThreadSize', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2022-01-09 15:42:37', '2022-01-09 15:42:37', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (63, 'transport.shutdown.wait', 'SEATA_GROUP', '3', 'eccbc87e4b5ce2fe28308fd9f2a7baf3', '2022-01-09 15:42:37', '2022-01-09 15:42:37', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (64, 'service.vgroupMapping.flybirds-system-group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2022-01-09 15:42:37', '2022-01-09 15:42:37', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (65, 'service.default.grouplist', 'SEATA_GROUP', '120.79.220.218:8091', '6c212629a10d13fd921a7237006764e2', '2022-01-09 15:42:37', '2022-01-09 15:42:37', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (66, 'service.enableDegrade', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-01-09 15:42:37', '2022-01-09 15:42:37', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (67, 'service.disableGlobalTransaction', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-01-09 15:42:38', '2022-01-09 15:42:38', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (68, 'client.rm.asyncCommitBufferLimit', 'SEATA_GROUP', '10000', 'b7a782741f667201b54880c925faec4b', '2022-01-09 15:42:38', '2022-01-09 15:42:38', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (69, 'client.rm.lock.retryInterval', 'SEATA_GROUP', '10', 'd3d9446802a44259755d38e6d163e820', '2022-01-09 15:42:38', '2022-01-09 15:42:38', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (70, 'client.rm.lock.retryTimes', 'SEATA_GROUP', '30', '34173cb38f07f89ddbebc2ac9128303f', '2022-01-09 15:42:38', '2022-01-09 15:42:38', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (71, 'client.rm.lock.retryPolicyBranchRollbackOnConflict', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2022-01-09 15:42:38', '2022-01-09 15:42:38', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (72, 'client.rm.reportRetryCount', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2022-01-09 15:42:38', '2022-01-09 15:42:38', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (73, 'client.rm.tableMetaCheckEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-01-09 15:42:38', '2022-01-09 15:42:38', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (74, 'client.rm.tableMetaCheckerInterval', 'SEATA_GROUP', '60000', '2b4226dd7ed6eb2d419b881f3ae9c97c', '2022-01-09 15:42:38', '2022-01-09 15:42:38', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (75, 'client.rm.sqlParserType', 'SEATA_GROUP', 'druid', '3d650fb8a5df01600281d48c47c9fa60', '2022-01-09 15:42:38', '2022-01-09 15:42:38', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (76, 'client.rm.reportSuccessEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-01-09 15:42:38', '2022-01-09 15:42:38', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (77, 'client.rm.sagaBranchRegisterEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-01-09 15:42:38', '2022-01-09 15:42:38', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (78, 'client.tm.commitRetryCount', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2022-01-09 15:42:39', '2022-01-09 15:42:39', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (79, 'client.tm.rollbackRetryCount', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2022-01-09 15:42:39', '2022-01-09 15:42:39', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (80, 'client.tm.defaultGlobalTransactionTimeout', 'SEATA_GROUP', '60000', '2b4226dd7ed6eb2d419b881f3ae9c97c', '2022-01-09 15:42:39', '2022-01-09 15:42:39', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (81, 'client.tm.degradeCheck', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-01-09 15:42:39', '2022-01-09 15:42:39', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (82, 'client.tm.degradeCheckAllowTimes', 'SEATA_GROUP', '10', 'd3d9446802a44259755d38e6d163e820', '2022-01-09 15:42:39', '2022-01-09 15:42:39', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (83, 'client.tm.degradeCheckPeriod', 'SEATA_GROUP', '2000', '08f90c1a417155361a5c4b8d297e0d78', '2022-01-09 15:42:39', '2022-01-09 15:42:39', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (84, 'store.mode', 'SEATA_GROUP', 'db', 'd77d5e503ad1439f585ac494268b351b', '2022-01-09 15:42:39', '2022-01-09 15:42:39', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (85, 'store.db.datasource', 'SEATA_GROUP', 'druid', '3d650fb8a5df01600281d48c47c9fa60', '2022-01-09 15:42:39', '2022-01-09 15:42:39', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (86, 'store.db.dbType', 'SEATA_GROUP', 'mysql', '81c3b080dad537de7e10e0987a4bf52e', '2022-01-09 15:42:39', '2022-01-09 15:42:39', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (87, 'store.db.driverClassName', 'SEATA_GROUP', 'com.mysql.jdbc.Driver', '683cf0c3a5a56cec94dfac94ca16d760', '2022-01-09 15:42:40', '2022-01-09 15:42:40', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (88, 'store.db.url', 'SEATA_GROUP', 'jdbc:mysql://120.79.220.218:3306/flybirds-seata?useUnicode=true&rewriteBatchedStatements=true', '032133267ce6660130d7f756f25cda5a', '2022-01-09 15:42:40', '2022-01-09 15:42:40', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (89, 'store.db.user', 'SEATA_GROUP', 'root', '63a9f0ea7bb98050796b649e85481845', '2022-01-09 15:42:40', '2022-01-09 15:42:40', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (90, 'store.db.password', 'SEATA_GROUP', 'flybirds@123', '059f6777887750d9fe47a386494a41e5', '2022-01-09 15:42:40', '2022-01-09 15:42:40', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (91, 'store.db.minConn', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2022-01-09 15:42:40', '2022-01-09 15:42:40', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (92, 'store.db.maxConn', 'SEATA_GROUP', '30', '34173cb38f07f89ddbebc2ac9128303f', '2022-01-09 15:42:40', '2022-01-09 15:42:40', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (93, 'store.db.globalTable', 'SEATA_GROUP', 'global_table', '8b28fb6bb4c4f984df2709381f8eba2b', '2022-01-09 15:42:40', '2022-01-09 15:42:40', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (94, 'store.db.branchTable', 'SEATA_GROUP', 'branch_table', '54bcdac38cf62e103fe115bcf46a660c', '2022-01-09 15:42:40', '2022-01-09 15:42:40', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (95, 'store.db.queryLimit', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2022-01-09 15:42:40', '2022-01-09 15:42:40', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (96, 'store.db.lockTable', 'SEATA_GROUP', 'lock_table', '55e0cae3b6dc6696b768db90098b8f2f', '2022-01-09 15:42:40', '2022-01-09 15:42:40', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (97, 'store.db.maxWait', 'SEATA_GROUP', '5000', 'a35fe7f7fe8217b4369a0af4244d1fca', '2022-01-09 15:42:40', '2022-01-09 15:42:40', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (98, 'server.recovery.committingRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2022-01-09 15:42:41', '2022-01-09 15:42:41', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (99, 'server.recovery.asynCommittingRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2022-01-09 15:42:41', '2022-01-09 15:42:41', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (100, 'server.recovery.rollbackingRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2022-01-09 15:42:41', '2022-01-09 15:42:41', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (101, 'server.recovery.timeoutRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2022-01-09 15:42:41', '2022-01-09 15:42:41', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (102, 'server.maxCommitRetryTimeout', 'SEATA_GROUP', '-1', '6bb61e3b7bce0931da574d19d1d82c88', '2022-01-09 15:42:41', '2022-01-09 15:42:41', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (103, 'server.maxRollbackRetryTimeout', 'SEATA_GROUP', '-1', '6bb61e3b7bce0931da574d19d1d82c88', '2022-01-09 15:42:41', '2022-01-09 15:42:41', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (104, 'server.rollbackRetryTimeoutUnlockEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-01-09 15:42:41', '2022-01-09 15:42:41', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (105, 'client.undo.dataValidation', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2022-01-09 15:42:41', '2022-01-09 15:42:41', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (106, 'client.undo.logSerialization', 'SEATA_GROUP', 'jackson', 'b41779690b83f182acc67d6388c7bac9', '2022-01-09 15:42:41', '2022-01-09 15:42:41', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (107, 'client.undo.onlyCareUpdateColumns', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2022-01-09 15:42:41', '2022-01-09 15:42:41', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (108, 'server.undo.logSaveDays', 'SEATA_GROUP', '7', '8f14e45fceea167a5a36dedd4bea2543', '2022-01-09 15:42:41', '2022-01-09 15:42:41', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (109, 'server.undo.logDeletePeriod', 'SEATA_GROUP', '86400000', 'f4c122804fe9076cb2710f55c3c6e346', '2022-01-09 15:42:42', '2022-01-09 15:42:42', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (110, 'client.undo.logTable', 'SEATA_GROUP', 'undo_log', '2842d229c24afe9e61437135e8306614', '2022-01-09 15:42:42', '2022-01-09 15:42:42', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (111, 'client.undo.compress.enable', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2022-01-09 15:42:42', '2022-01-09 15:42:42', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (112, 'client.undo.compress.type', 'SEATA_GROUP', 'zip', 'adcdbd79a8d84175c229b192aadc02f2', '2022-01-09 15:42:42', '2022-01-09 15:42:42', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (113, 'client.undo.compress.threshold', 'SEATA_GROUP', '64k', 'bd44a6458bdbff0b5cac721ba361f035', '2022-01-09 15:42:42', '2022-01-09 15:42:42', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (114, 'log.exceptionRate', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2022-01-09 15:42:42', '2022-01-09 15:42:42', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (115, 'transport.serialization', 'SEATA_GROUP', 'seata', 'b943081c423b9a5416a706524ee05d40', '2022-01-09 15:42:42', '2022-01-09 15:42:42', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (116, 'transport.compressor', 'SEATA_GROUP', 'none', '334c4a4c42fdb79d7ebc3e73b517e6f8', '2022-01-09 15:42:42', '2022-01-09 15:42:42', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (117, 'metrics.enabled', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2022-01-09 15:42:42', '2022-01-09 15:42:42', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (118, 'metrics.registryType', 'SEATA_GROUP', 'compact', '7cf74ca49c304df8150205fc915cd465', '2022-01-09 15:42:42', '2022-01-09 15:42:42', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (119, 'metrics.exporterList', 'SEATA_GROUP', 'prometheus', 'e4f00638b8a10e6994e67af2f832d51c', '2022-01-09 15:42:42', '2022-01-09 15:42:42', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (120, 'metrics.exporterPrometheusPort', 'SEATA_GROUP', '9898', '7b9dc501afe4ee11c56a4831e20cee71', '2022-01-09 15:42:42', '2022-01-09 15:42:42', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (121, 'service.vgroupMapping.flybirds-oauth-group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2022-01-09 15:48:06', '2022-01-09 15:48:06', NULL, '120.79.220.218', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (132, 'application-dev.yml', 'DEFAULT_GROUP', 'spring:\n  jackson:\n    serialization:\n     FAIL_ON_EMPTY_BEANS: false\n  redis:\n    database: 0\n    host: ${flybirds.ip.redis}\n    port: 6379\n    password: ${flybirds.password.redis}\n    timeout: 6000ms  # 连接超时时长（毫秒）\n    jedis:\n      pool:\n        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）\n        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）\n        max-idle: 10      # 连接池中的最大空闲连接\n        min-idle: 5       # 连接池中的最小空闲连接\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: ${flybirds.user.druid}\n        loginPassword: ${flybirds.password.druid}\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,wall,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            name: flybirds-sms\n            url: jdbc:mysql://${flybirds.ip.mysql}:3306/${spring.datasource.dynamic.datasource.master.name}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: ${flybirds.user.mysql}\n            password: ${flybirds.password.mysql}\n      # 开启seata代理\n      seata: false     \n# seata配置\nseata:\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      flybirds-system-group: default\n    # 分组和 Seata 服务的映射\n    grouplist:\n      default: ${flybirds.ip.seata}:8091\n  config:\n    type: nacos\n    nacos:\n      serverAddr: ${flybirds.ip.nacos}:8848\n      group: SEATA_GROUP\n      namespace: ${flybirds.nacos.namespace.seata}\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: ${flybirds.ip.nacos}:8848\n      namespace: ${flybirds.nacos.namespace.seata}\n\n\n\nmybatis-plus:\n  # 对应的 XML 文件位置\n  mapperLocations: classpath*:/com/flybirds/**/mapper/xml/*.xml\n  # 实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.flybirds.**.entity\n  # 针对 typeAliasesPackage，如果配置了该属性，则仅仅会扫描路径下以该类作为父类的域对象\n  #typeAliasesSuperType: Class<?>\n  # 如果配置了该属性，SqlSessionFactoryBean 会把该包下面的类注册为对应的 TypeHandler\n  #typeHandlersPackage: null\n  # 如果配置了该属性，会将路径下的枚举类进行注入，让实体类字段能够简单快捷的使用枚举属性\n  #typeEnumsPackage: null\n  # 启动时是否检查 MyBatis XML 文件的存在，默认不检查\n  checkConfigLocation: false\n  # 通过该属性可指定 MyBatis 的执行器，MyBatis 的执行器总共有三种：\n  # SIMPLE：该执行器类型不做特殊的事情，为每个语句的执行创建一个新的预处理语句（PreparedStatement）\n  # REUSE：该执行器类型会复用预处理语句（PreparedStatement）\n  # BATCH：该执行器类型会批量执行所有的更新语句\n  executorType: SIMPLE\n  # 指定外部化 MyBatis Properties 配置，通过该配置可以抽离配置，实现不同环境的配置部署\n  configurationProperties: null\n  configuration:\n    # 自动驼峰命名规则（camel case）映射\n    # 如果您的数据库命名符合规则无需使用 @TableField 注解指定数据库字段名\n    mapUnderscoreToCamelCase: true\n    # 默认枚举处理类,如果配置了该属性,枚举将统一使用指定处理器进行处理\n    # org.apache.ibatis.type.EnumTypeHandler : 存储枚举的名称\n    # org.apache.ibatis.type.EnumOrdinalTypeHandler : 存储枚举的索引\n    # com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler : 枚举类需要实现IEnum接口或字段标记@EnumValue注解\n\n    defaultEnumTypeHandler: org.apache.ibatis.type.EnumTypeHandler\n    # 当设置为 true 的时候，懒加载的对象可能被任何懒属性全部加载，否则，每个属性都按需加载。需要和 lazyLoadingEnabled 一起使用。\n    aggressiveLazyLoading: true\n    # MyBatis 自动映射策略\n    # NONE：不启用自动映射\n    # PARTIAL：只对非嵌套的 resultMap 进行自动映射\n    # FULL：对所有的 resultMap 都进行自动映射\n    autoMappingBehavior: PARTIAL\n    # MyBatis 自动映射时未知列或未知属性处理策\n    # NONE：不做任何处理 (默认值)\n    # WARNING：以日志的形式打印相关警告信息\n    # FAILING：当作映射失败处理，并抛出异常和详细信息\n    autoMappingUnknownColumnBehavior: NONE\n    # Mybatis一级缓存，默认为 SESSION\n    # SESSION session级别缓存，同一个session相同查询语句不会再次查询数据库\n    # STATEMENT 关闭一级缓存\n    localCacheScope: SESSION\n    # 开启Mybatis二级缓存，默认为 true\n    cacheEnabled: true\n  global-config:\n    # 是否打印 Logo banner\n    banner: true\n    # 是否初始化 SqlRunner\n    enableSqlRunner: false\n    dbConfig:\n      # 主键类型\n      # AUTO 数据库ID自增\n      # NONE 空\n      # INPUT 用户输入ID\n      # ASSIGN_ID 全局唯一ID\n      # ASSIGN_UUID 全局唯一ID UUID\n      idType: AUTO\n      # 表名前缀\n      tablePrefix: null\n      # 字段 format,例: %s,(对主键无效)\n      columnFormat: null\n      # 表名是否使用驼峰转下划线命名,只对表名生效\n      tableUnderline: true\n      # 大写命名,对表名和字段名均生效\n      capitalMode: false\n      # 全局的entity的逻辑删除字段属性名\n      logicDeleteField: null\n      # 逻辑已删除值\n      logicDeleteValue: 1\n      # 逻辑未删除值\n      logicNotDeleteValue: 0\n      # 字段验证策略之 insert,在 insert 的时候的字段验证策略\n      # IGNORED 忽略判断\n      # NOT_NULL 非NULL判断\n      # NOT_EMPTY 非空判断(只对字符串类型字段,其他类型字段依然为非NULL判断)\n      # DEFAULT 默认的,一般只用于注解里\n      # NEVER 不加入 SQL\n      insertStrategy: NOT_NULL\n      # 字段验证策略之 update,在 update 的时候的字段验证策略\n      updateStrategy: NOT_NULL\n      # 字段验证策略之 select,在 select 的时候的字段验证策略既 wrapper 根据内部 entity 生成的 where 条件\n      selectStrategy: NOT_NULL\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: true\n  supportMethodsArguments: true\n  params: count=countSql\n\n#web端配置\nflybirds:\n  user:\n    mysql: root\n    druid: admin\n  password:\n    mysql: flybirds@123\n    druid: flybirds@123\n    redis: flybirds@123\n  nacos:\n    namespace:\n      seata: 8f40f317-b4b1-40fa-a529-11c7f3b18701\n  ip:\n    nacos: 120.79.220.218\n    mysql: 120.79.220.218\n    redis: 120.79.220.218\n    seata: 120.79.220.218\n    host: 119.91.25.140 \n  info:\n    name: flying 数字化\n    version: 1.0.0.version\n    base-package: com.flybirds.sms\n    copyrightYear: 2021\n    profile: /home/flybirds/data/profile\n    addressEnabled: true\n  file:\n    base-path: \n  xss:\n    enable: false\n    exclude-urls: # 如下两个 url，仅仅是为了演示，去掉配置也没关系\n      - ${spring.boot.admin.context-path}/** # 不处理 Spring Boot Admin 的请求\n      - ${management.endpoints.web.base-path}/** # 不处理 Actuator 的请求\n  # 开启演示模式\n  demo: \n    enable: false\n  web:\n    enable: false\n    api-prefix: /sms\n    controller-package: ${flybirds.info.base-package}\n  error-code: # 错误码相关配置项\n    constants-class-list:\n      - com.flybirds.common.constant.result.SysErrorCodeConstants\n      - com.flybirds.common.constant.result.InfErrorCodeConstants\n  security:\n    rememberMeSeconds: 604800\n  platform:\n    request-apilog:\n      enable: true\n      ignore-urls:\n         # 静态\n        - /webjars/**\n        - /swagger-resources/**\n        - /doc.html\n        - /v2/api-docs\n        - /css/**\n        - /index.html\n        - /img/**\n        - /fonts/**\n        - /favicon.ico\n        #业务apilog\n        - /actuator/**\n        - /druid/***\n        #登录\n        - /oauth2/**\n        - /oauth/**\n        - /token/**\n    sign:\n      enable: false\n      secret: 916lWh2WMcbSWiHv\n      ignore-urls:\n        - /webjars/**\n        - /swagger/**\n        - /swagger-ui.html\n        - /swagger-resources/**\n        - /swagger/**\n        - /**/v2/api-docs\n        - /**/v2/api-docs-ext\n        - /doc.html\n        - /**/*.js\n        - /**/*.css\n        - /**/*.png\n        - /**/*.ico\naliyun:\n  accessKeyId: LTAI5tDq5fixrXPL9GXsHYcG\n  accessKeySecret: gmoGddGJKFiY5Cn5sGtqefBpLQzlOL\n\n#swagger-ui文档配置   \nswagger:\n  title: ${spring.application.name}模块接口文档\n  license: Powered By flybirds\n  licenseUrl: https://io.flybirds.com\n  authorization:\n    name: flybirds-oauth\n    auth-regex: ^.*$\n    authorization-scope-list:\n      - scope: web_service\n        description: 客户端认证系统服务\n    token-url-list:\n      - http://${flybirds.ip.host}:9903/oauth/login\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'', '7ffcfb9510f9d8d738ee30db2fba2e54', '2022-01-19 13:38:47', '2022-01-31 13:34:48', NULL, '103.98.240.94', '', '98aa14c2-68b9-4df9-aa79-29797f685eca', '关闭分布式事务', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (136, 'application-dev.yml', 'DEFAULT_GROUP', 'spring: \n  redis:\n    database: 0\n    host: ${flybirds.ip.redis}\n    port: 6379\n    password: ${flybirds.password.redis}\n    jedis:\n      pool:\n        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）\n        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）\n        max-idle: 10      # 连接池中的最大空闲连接\n        min-idle: 5       # 连接池中的最小空闲连接\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: ${flybirds.user.druid}\n        loginPassword: ${flybirds.password.druid}\n    dynamic:\n      primary: master\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,wall,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            name: flybirds-gen\n            url: jdbc:mysql://${flybirds.ip.mysql}:3306/${spring.datasource.dynamic.datasource.master.name}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: ${flybirds.user.mysql}\n            password: ${flybirds.password.mysql}\n          genbus:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            name: flybirds-genbus\n            url: jdbc:mysql://${flybirds.ip.mysql}:3306/${spring.datasource.dynamic.datasource.genbus.name}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: ${flybirds.user.mysql}\n            password: ${flybirds.password.mysql}\n      seata: true\n      \n# seata配置\nseata:\n  enabled: true\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      flybirds-generate-group: default\n    # 分组和 Seata 服务的映射\n    grouplist:\n      default: ${flybirds.ip.seata}:8091\n  config:\n    type: nacos\n    nacos:\n      serverAddr: ${flybirds.ip.nacos}:8848\n      group: SEATA_GROUP\n      namespace: ${flybirds.nacos.namespace.seata}\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: ${flybirds.ip.nacos}:8848\n      namespace: ${flybirds.nacos.namespace.seata}\n#mybatis_plus配置\nmybatis-plus:\n  # 对应的 XML 文件位置\n  mapperLocations: classpath*:/com/flybirds/**/mapper/xml/*.xml\n  # 实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.flybirds.**.entity\n  # 针对 typeAliasesPackage，如果配置了该属性，则仅仅会扫描路径下以该类作为父类的域对象\n  #typeAliasesSuperType: Class<?>\n  # 如果配置了该属性，SqlSessionFactoryBean 会把该包下面的类注册为对应的 TypeHandler\n  #typeHandlersPackage: null\n  # 如果配置了该属性，会将路径下的枚举类进行注入，让实体类字段能够简单快捷的使用枚举属性\n  #typeEnumsPackage: null\n  # 启动时是否检查 MyBatis XML 文件的存在，默认不检查\n  checkConfigLocation: false\n  # 通过该属性可指定 MyBatis 的执行器，MyBatis 的执行器总共有三种：\n  # SIMPLE：该执行器类型不做特殊的事情，为每个语句的执行创建一个新的预处理语句（PreparedStatement）\n  # REUSE：该执行器类型会复用预处理语句（PreparedStatement）\n  # BATCH：该执行器类型会批量执行所有的更新语句\n  executorType: SIMPLE\n  # 指定外部化 MyBatis Properties 配置，通过该配置可以抽离配置，实现不同环境的配置部署\n  configurationProperties: null\n  configuration:\n    # 自动驼峰命名规则（camel case）映射\n    # 如果您的数据库命名符合规则无需使用 @TableField 注解指定数据库字段名\n    mapUnderscoreToCamelCase: true\n    # 默认枚举处理类,如果配置了该属性,枚举将统一使用指定处理器进行处理\n    # org.apache.ibatis.type.EnumTypeHandler : 存储枚举的名称\n    # org.apache.ibatis.type.EnumOrdinalTypeHandler : 存储枚举的索引\n    # com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler : 枚举类需要实现IEnum接口或字段标记@EnumValue注解.\n    defaultEnumTypeHandler: org.apache.ibatis.type.EnumTypeHandler\n    # 当设置为 true 的时候，懒加载的对象可能被任何懒属性全部加载，否则，每个属性都按需加载。需要和 lazyLoadingEnabled 一起使用。\n    aggressiveLazyLoading: true\n    # MyBatis 自动映射策略\n    # NONE：不启用自动映射\n    # PARTIAL：只对非嵌套的 resultMap 进行自动映射\n    # FULL：对所有的 resultMap 都进行自动映射\n    autoMappingBehavior: PARTIAL\n    # MyBatis 自动映射时未知列或未知属性处理策\n    # NONE：不做任何处理 (默认值)\n    # WARNING：以日志的形式打印相关警告信息\n    # FAILING：当作映射失败处理，并抛出异常和详细信息\n    autoMappingUnknownColumnBehavior: NONE\n    # Mybatis一级缓存，默认为 SESSION\n    # SESSION session级别缓存，同一个session相同查询语句不会再次查询数据库\n    # STATEMENT 关闭一级缓存\n    localCacheScope: SESSION\n    # 开启Mybatis二级缓存，默认为 true\n    cacheEnabled: true\n  global-config:\n    # 是否打印 Logo banner\n    banner: true\n    # 是否初始化 SqlRunner\n    enableSqlRunner: false\n    dbConfig:\n      # 主键类型\n      # AUTO 数据库ID自增\n      # NONE 空\n      # INPUT 用户输入ID\n      # ASSIGN_ID 全局唯一ID\n      # ASSIGN_UUID 全局唯一ID UUID\n      idType: ASSIGN_ID\n      # 表名前缀\n      tablePrefix: null\n      # 字段 format,例: %s,(对主键无效)\n      columnFormat: null\n      # 表名是否使用驼峰转下划线命名,只对表名生效\n      tableUnderline: true\n      # 大写命名,对表名和字段名均生效\n      capitalMode: false\n      # 全局的entity的逻辑删除字段属性名\n      logicDeleteField: deleteStatus\n      # 逻辑已删除值\n      logicDeleteValue: 1\n      # 逻辑未删除值\n      logicNotDeleteValue: 0\n      # 字段验证策略之 insert,在 insert 的时候的字段验证策略\n      # IGNORED 忽略判断\n      # NOT_NULL 非NULL判断\n      # NOT_EMPTY 非空判断(只对字符串类型字段,其他类型字段依然为非NULL判断)\n      # DEFAULT 默认的,一般只用于注解里\n      # NEVER 不加入 SQL\n      insertStrategy: NOT_NULL\n      # 字段验证策略之 update,在 update 的时候的字段验证策略\n      updateStrategy: NOT_NULL\n      # 字段验证策略之 select,在 select 的时候的字段验证策略既 wrapper 根据内部 entity 生成的 where 条件\n      selectStrategy: NOT_NULL\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: true\n  supportMethodsArguments: true\n  params: count=countSql\n# 代码生成\ngen: \n  # 作者\n  author: flybirds\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.flybirds.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n  \nflybirds:\n  user:\n    mysql: root\n    druid: admin\n  password:\n    mysql: flybirds@123\n    druid: flybirds@123\n    redis: flybirds@123\n  nacos:\n    namespace:\n      seata: 8f40f317-b4b1-40fa-a529-11c7f3b18701\n  ip:\n    nacos: 120.79.220.218\n    mysql: 120.79.220.218\n    redis: 120.79.220.218\n    seata: 120.79.220.218\n    host: 119.91.25.140\n  info:\n    name: flying 数字化\n    version: 1.0.0.version\n    base-package: com.flybirds.generate\n    copyrightYear: 2021\n    profile: /home/flybirds/data/profile\n    addressEnabled: true\n  file:\n  xss:\n    enable: false\n    exclude-urls: # 如下两个 url，仅仅是为了演示，去掉配置也没关系\n      - ${spring.boot.admin.context-path}/** # 不处理 Spring Boot Admin 的请求\n      - ${management.endpoints.web.base-path}/** # 不处理 Actuator 的请求\n  # 开启演示模式\n  demo: \n    enable: false\n  web:\n    enable: false\n    api-prefix: /tool\n    controller-package: ${flybirds.info.base-package}\n  error-code: # 错误码相关配置项\n    constants-class-list:\n      - com.flybirds.common.constant.result.SysErrorCodeConstants\n      - com.flybirds.common.constant.result.InfErrorCodeConstants\n  security:\n    rememberMeSeconds: 604800\n  platform:\n    request-apilog:\n      enable: true\n      ignore-urls:\n         # 静态\n        - /webjars/**\n        - /swagger-resources/**\n        - /doc.html\n        - /v2/api-docs\n        - /css/**\n        - /index.html\n        - /img/**\n        - /fonts/**\n        - /favicon.ico\n        #业务apilog\n        - /actuator/**\n        - /druid/***\n        #登录\n        - /oauth2/**\n        - /oauth/**\n        - /token/**\n    sign:\n      enable: false\n      secret: 916lWh2WMcbSWiHv\n      ignore-urls:\n        - /webjars/**\n        - /swagger/**\n        - /swagger-ui.html\n        - /swagger-resources/**\n        - /swagger/**\n        - /**/v2/api-docs\n        - /**/v2/api-docs-ext\n        - /doc.html\n        - /**/*.js\n        - /**/*.css\n        - /**/*.png\n        - /**/*.ico\n\n#swagger-ui文档配置   \nswagger:\n  title: ${spring.application.name}模块接口文档\n  license: Powered By flybirds\n  licenseUrl: https://io.flybirds.com\n  authorization:\n    name: flybirds-oauth\n    auth-regex: ^.*$\n    authorization-scope-list:\n      - scope: web_service\n        description: 客户端认证系统服务\n    token-url-list:\n      - http://${flybirds.ip.host}:9903/oauth/login\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n', '4982be4b193b30c0faae1d8e9f1a1b39', '2022-01-19 14:06:41', '2022-01-21 03:41:45', NULL, '183.236.95.242', '', 'a60bdedd-f0e3-46f6-89fd-bb18f38f1d11', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (137, 'application-dev.yml', 'SHARE3_GROUP', '# spring配置\nspring: \n  redis:\n    host: ${flybirds.ip.redis}\n    port: 6379\n    password: ${flybirds.password.redis}\n    jedis:\n      pool:\n        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）\n        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）\n        max-idle: 10      # 连接池中的最大空闲连接\n        min-idle: 5       # 连接池中的最小空闲连接\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: ${flybirds.user.druid}\n        loginPassword: ${flybirds.password.druid}\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,wall,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n         master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            name: flybirds-cloud\n            url: jdbc:mysql://${flybirds.ip.mysql}:3306/${spring.datasource.dynamic.datasource.master.name}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: ${flybirds.user.mysql}\n            password: ${flybirds.password.mysql}\n          # seata_file数据源\n         file:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            name: flybirds-file\n            url: jdbc:mysql://${flybirds.ip.mysql}:3306/${spring.datasource.dynamic.datasource.file.name}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: ${flybirds.user.mysql}\n            password: ${flybirds.password.mysql}\n            \n#mybatis-plus\nmybatis-plus:\n  # 对应的 XML 文件位置\n  mapperLocations: classpath*:/com/flybirds/**/mapper/xml/*.xml\n  # 实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.flybirds.**.entity\n  # 针对 typeAliasesPackage，如果配置了该属性，则仅仅会扫描路径下以该类作为父类的域对象\n  #typeAliasesSuperType: Class<?>\n  # 如果配置了该属性，SqlSessionFactoryBean 会把该包下面的类注册为对应的 TypeHandler\n  #typeHandlersPackage: null\n  # 如果配置了该属性，会将路径下的枚举类进行注入，让实体类字段能够简单快捷的使用枚举属性\n  #typeEnumsPackage: null\n  # 启动时是否检查 MyBatis XML 文件的存在，默认不检查\n  checkConfigLocation: false\n  # 通过该属性可指定 MyBatis 的执行器，MyBatis 的执行器总共有三种：\n  # SIMPLE：该执行器类型不做特殊的事情，为每个语句的执行创建一个新的预处理语句（PreparedStatement）\n  # REUSE：该执行器类型会复用预处理语句（PreparedStatement）\n  # BATCH：该执行器类型会批量执行所有的更新语句\n  executorType: SIMPLE\n  # 指定外部化 MyBatis Properties 配置，通过该配置可以抽离配置，实现不同环境的配置部署\n  configurationProperties: null\n  configuration:\n    # 自动驼峰命名规则（camel case）映射\n    # 如果您的数据库命名符合规则无需使用 @TableField 注解指定数据库字段名\n    mapUnderscoreToCamelCase: true\n    # 默认枚举处理类,如果配置了该属性,枚举将统一使用指定处理器进行处理\n    # org.apache.ibatis.type.EnumTypeHandler : 存储枚举的名称\n    # org.apache.ibatis.type.EnumOrdinalTypeHandler : 存储枚举的索引\n    # com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler : 枚举类需要实现IEnum接口或字段标记@EnumValue注解.\n    defaultEnumTypeHandler: org.apache.ibatis.type.EnumTypeHandler\n    # 当设置为 true 的时候，懒加载的对象可能被任何懒属性全部加载，否则，每个属性都按需加载。需要和 lazyLoadingEnabled 一起使用。\n    aggressiveLazyLoading: true\n    # MyBatis 自动映射策略\n    # NONE：不启用自动映射\n    # PARTIAL：只对非嵌套的 resultMap 进行自动映射\n    # FULL：对所有的 resultMap 都进行自动映射\n    autoMappingBehavior: PARTIAL\n    # MyBatis 自动映射时未知列或未知属性处理策\n    # NONE：不做任何处理 (默认值)\n    # WARNING：以日志的形式打印相关警告信息\n    # FAILING：当作映射失败处理，并抛出异常和详细信息\n    autoMappingUnknownColumnBehavior: NONE\n    # Mybatis一级缓存，默认为 SESSION\n    # SESSION session级别缓存，同一个session相同查询语句不会再次查询数据库\n    # STATEMENT 关闭一级缓存\n    localCacheScope: SESSION\n    # 开启Mybatis二级缓存，默认为 true\n    cacheEnabled: true\n  global-config:\n    # 是否打印 Logo banner\n    banner: true\n    # 是否初始化 SqlRunner\n    enableSqlRunner: false\n    dbConfig:\n      # 主键类型\n      # AUTO 数据库ID自增\n      # NONE 空\n      # INPUT 用户输入ID\n      # ASSIGN_ID 全局唯一ID\n      # ASSIGN_UUID 全局唯一ID UUID\n      idType: AUTO\n      # 表名前缀\n      tablePrefix: null\n      # 字段 format,例: %s,(对主键无效)\n      columnFormat: null\n      # 表名是否使用驼峰转下划线命名,只对表名生效\n      tableUnderline: true\n      # 大写命名,对表名和字段名均生效\n      capitalMode: false\n      # 全局的entity的逻辑删除字段属性名\n      logicDeleteField: null\n      # 逻辑已删除值\n      logicDeleteValue: 1\n      # 逻辑未删除值\n      logicNotDeleteValue: 0\n      # 字段验证策略之 insert,在 insert 的时候的字段验证策略\n      # IGNORED 忽略判断\n      # NOT_NULL 非NULL判断\n      # NOT_EMPTY 非空判断(只对字符串类型字段,其他类型字段依然为非NULL判断)\n      # DEFAULT 默认的,一般只用于注解里\n      # NEVER 不加入 SQL\n      insertStrategy: NOT_NULL\n      # 字段验证策略之 update,在 update 的时候的字段验证策略\n      updateStrategy: NOT_NULL\n      # 字段验证策略之 select,在 select 的时候的字段验证策略既 wrapper 根据内部 entity 生成的 where 条件\n      selectStrategy: NOT_NULL\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: true\n  supportMethodsArguments: true\n  params: count=countSql\n\nflybirds:\n  user:\n    mysql: root\n    druid: admin\n  password:\n    mysql: flybirds@123\n    druid: flybirds@123\n    redis: flybirds@123\n  ip:\n    nacos: 120.79.220.218\n    mysql: 120.79.220.218\n    redis: 120.79.220.218\n    seata: 120.79.220.218\n    fdfs: 120.79.220.218\n    minio: 120.79.220.218\n    host: 119.91.25.140\n    \n#请求处理的超时时间\nribbon:\n  ReadTimeout: 10000\n  ConnectTimeout: 10000\n# feign 配置\nfeign:\n  sentinel:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 10000\n        readTimeout: 10000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n## 本地文件上传    \nfile:\n  domain: http://${flybirds.ip.host}:9300\n  path: /home/flybirds/data/profile\n  prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://${flybirds.ip.fdfs}\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: ${flybirds.ip.fdfs}:22122\n# minio配置\n\nminio:\n  url: http://${flybirds.ip.minio}:9000\n  accessKey: flybirds\n  secretKey: flybirds@123\n  bucketName: demo  \n  \n#swagger-ui文档配置   \nswagger:\n  title: ${spring.application.name}模块接口文档\n  license: Powered By flybirds\n  licenseUrl: https://io.flybirds.com\n  authorization:\n    name: flybirds-oauth\n    auth-regex: ^.*$\n    authorization-scope-list:\n      - scope: web_service\n        description: 客户端认证系统服务\n    token-url-list:\n      - http://${flybirds.ip.host}:9903/oauth/login\n      \n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'', '0f50c47154bf31b197af53afc5f37dc6', '2022-01-20 13:13:10', '2022-01-21 03:44:08', NULL, '183.236.95.242', '', '5efd17b7-9619-4adf-99f2-6d25417e532e', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (154, 'service.vgroupMapping.flybirds-sms-group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2022-01-21 03:45:59', '2022-01-21 03:45:59', NULL, '183.236.95.242', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (155, 'service.vgroupMapping.flybirds-generate-group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2022-01-21 03:46:31', '2022-01-21 03:46:31', NULL, '183.236.95.242', '', '8f40f317-b4b1-40fa-a529-11c7f3b18701', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (156, 'application-dev.yml', 'DEFAULT_GROUP', 'spring: \n servlet:\n    multipart:\n      max-file-size: 100MB\n      max-request-size: 100MB\n redis:\n    host: ${flybirds.ip.redis}\n    port: 6379\n    password: ${flybirds.password.redis}\n    jedis:\n      pool:\n        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）\n        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）\n        max-idle: 10      # 连接池中的最大空闲连接\n        min-idle: 5       # 连接池中的最小空闲连接\n datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: ${flybirds.user.druid}\n        loginPassword: ${flybirds.password.druid}\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,wall,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n         master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            name: flybirds-oss\n            url: jdbc:mysql://${flybirds.ip.mysql}:3306/${spring.datasource.dynamic.datasource.master.name}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: ${flybirds.user.mysql}\n            password: ${flybirds.password.mysql}\n            \n#mybatis-plus\nmybatis-plus:\n  # 对应的 XML 文件位置\n  mapperLocations: classpath*:/com/flybirds/**/mapper/xml/*.xml\n  # 实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.flybirds.**.entity\n  # 针对 typeAliasesPackage，如果配置了该属性，则仅仅会扫描路径下以该类作为父类的域对象\n  #typeAliasesSuperType: Class<?>\n  # 如果配置了该属性，SqlSessionFactoryBean 会把该包下面的类注册为对应的 TypeHandler\n  #typeHandlersPackage: null\n  # 如果配置了该属性，会将路径下的枚举类进行注入，让实体类字段能够简单快捷的使用枚举属性\n  #typeEnumsPackage: null\n  # 启动时是否检查 MyBatis XML 文件的存在，默认不检查\n  checkConfigLocation: false\n  # 通过该属性可指定 MyBatis 的执行器，MyBatis 的执行器总共有三种：\n  # SIMPLE：该执行器类型不做特殊的事情，为每个语句的执行创建一个新的预处理语句（PreparedStatement）\n  # REUSE：该执行器类型会复用预处理语句（PreparedStatement）\n  # BATCH：该执行器类型会批量执行所有的更新语句\n  executorType: SIMPLE\n  # 指定外部化 MyBatis Properties 配置，通过该配置可以抽离配置，实现不同环境的配置部署\n  configurationProperties: null\n  configuration:\n    # 自动驼峰命名规则（camel case）映射\n    # 如果您的数据库命名符合规则无需使用 @TableField 注解指定数据库字段名\n    mapUnderscoreToCamelCase: true\n    # 默认枚举处理类,如果配置了该属性,枚举将统一使用指定处理器进行处理\n    # org.apache.ibatis.type.EnumTypeHandler : 存储枚举的名称\n    # org.apache.ibatis.type.EnumOrdinalTypeHandler : 存储枚举的索引\n    # com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler : 枚举类需要实现IEnum接口或字段标记@EnumValue注解.\n    defaultEnumTypeHandler: org.apache.ibatis.type.EnumTypeHandler\n    # 当设置为 true 的时候，懒加载的对象可能被任何懒属性全部加载，否则，每个属性都按需加载。需要和 lazyLoadingEnabled 一起使用。\n    aggressiveLazyLoading: true\n    # MyBatis 自动映射策略\n    # NONE：不启用自动映射\n    # PARTIAL：只对非嵌套的 resultMap 进行自动映射\n    # FULL：对所有的 resultMap 都进行自动映射\n    autoMappingBehavior: PARTIAL\n    # MyBatis 自动映射时未知列或未知属性处理策\n    # NONE：不做任何处理 (默认值)\n    # WARNING：以日志的形式打印相关警告信息\n    # FAILING：当作映射失败处理，并抛出异常和详细信息\n    autoMappingUnknownColumnBehavior: NONE\n    # Mybatis一级缓存，默认为 SESSION\n    # SESSION session级别缓存，同一个session相同查询语句不会再次查询数据库\n    # STATEMENT 关闭一级缓存\n    localCacheScope: SESSION\n    # 开启Mybatis二级缓存，默认为 true\n    cacheEnabled: true\n  global-config:\n    # 是否打印 Logo banner\n    banner: true\n    # 是否初始化 SqlRunner\n    enableSqlRunner: false\n    dbConfig:\n      # 主键类型\n      # AUTO 数据库ID自增\n      # NONE 空\n      # INPUT 用户输入ID\n      # ASSIGN_ID 全局唯一ID\n      # ASSIGN_UUID 全局唯一ID UUID\n      idType: AUTO\n      # 表名前缀\n      tablePrefix: null\n      # 字段 format,例: %s,(对主键无效)\n      columnFormat: null\n      # 表名是否使用驼峰转下划线命名,只对表名生效\n      tableUnderline: true\n      # 大写命名,对表名和字段名均生效\n      capitalMode: false\n      # 全局的entity的逻辑删除字段属性名\n      logicDeleteField: null\n      # 逻辑已删除值\n      logicDeleteValue: 1\n      # 逻辑未删除值\n      logicNotDeleteValue: 0\n      # 字段验证策略之 insert,在 insert 的时候的字段验证策略\n      # IGNORED 忽略判断\n      # NOT_NULL 非NULL判断\n      # NOT_EMPTY 非空判断(只对字符串类型字段,其他类型字段依然为非NULL判断)\n      # DEFAULT 默认的,一般只用于注解里\n      # NEVER 不加入 SQL\n      insertStrategy: NOT_NULL\n      # 字段验证策略之 update,在 update 的时候的字段验证策略\n      updateStrategy: NOT_NULL\n      # 字段验证策略之 select,在 select 的时候的字段验证策略既 wrapper 根据内部 entity 生成的 where 条件\n      selectStrategy: NOT_NULL\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: true\n  supportMethodsArguments: true\n  params: count=countSql\n\nflybirds:\n  user:\n    mysql: root\n    druid: admin\n  password:\n    mysql: flybirds@123\n    druid: flybirds@123\n    redis: flybirds@123\n  ip:\n    nacos: 120.79.220.218\n    mysql: 120.79.220.218\n    redis: 120.79.220.218\n    seata: 120.79.220.218\n    fdfs: 120.79.220.218\n    minio: 120.79.220.218\n    host: 119.91.25.140\n  info:\n    name: flying 数字化\n    version: 1.0.0.version\n    base-package: com.flybirds.oss\n    copyrightYear: 2021\n    profile: /home/flybirds/data/profile\n    addressEnabled: true\n  file:\n  xss:\n    enable: false\n    exclude-urls: # 如下两个 url，仅仅是为了演示，去掉配置也没关系\n      - ${spring.boot.admin.context-path}/** # 不处理 Spring Boot Admin 的请求\n      - ${management.endpoints.web.base-path}/** # 不处理 Actuator 的请求\n  # 开启演示模式\n  demo: \n    enable: false\n  web:\n    enable: false\n    api-prefix: /oss\n    controller-package: ${flybirds.info.base-package}\n  error-code: # 错误码相关配置项\n    constants-class-list:\n      - com.flybirds.common.constant.result.SysErrorCodeConstants\n      - com.flybirds.common.constant.result.InfErrorCodeConstants\n  security:\n    rememberMeSeconds: 604800\n  platform:\n    request-apilog:\n      enable: true\n      ignore-urls:\n         # 静态\n        - /webjars/**\n        - /swagger-resources/**\n        - /doc.html\n        - /v2/api-docs\n        - /css/**\n        - /index.html\n        - /img/**\n        - /fonts/**\n        - /favicon.ico\n        #业务apilog\n        - /actuator/**\n        - /druid/***\n        #登录\n        - /oauth2/**\n        - /oauth/**\n        - /token/**\n    sign:\n      enable: false\n      secret: 916lWh2WMcbSWiHv\n      ignore-urls:\n        - /webjars/**\n        - /swagger/**\n        - /swagger-ui.html\n        - /swagger-resources/**\n        - /swagger/**\n        - /**/v2/api-docs\n        - /**/v2/api-docs-ext\n        - /doc.html\n        - /**/*.js\n        - /**/*.css\n        - /**/*.png\n        - /**/*.ico\n    \n\n#swagger-ui文档配置   \nswagger:\n  title: ${spring.application.name}模块接口文档\n  license: Powered By flybirds\n  licenseUrl: https://io.flybirds.com\n  authorization:\n    name: flybirds-oauth\n    auth-regex: ^.*$\n    authorization-scope-list:\n      - scope: web_service\n        description: 客户端认证系统服务\n    token-url-list:\n      - http://${flybirds.ip.host}:9903/oauth/login\n      \n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n              \n#oss配置\noss:\n  share-prefix: http://{flybirds.ip.host}:7001/share\n  cache:\n    type: com.flybirds.cache.redis.RedisCacheOss\n  storage:\n    processor:\n      type: com.flybirds.storage.local.LocalStorageProcessor\n    local:\n      root-file-path: /home/flybirds/data/pan\n      temp-path: /home/flybirds/data/pan/temp\n    oss:\n      endpoint:\n      access-key-id:\n      access-key-secret:\n      bucket-name:\n      auto-create-bucket:\n    fdfs:\n      group: group1\n      connect-timeout: 600\n      tracker-list[0]: ${flybirds.ip.fdfs}:22122', '5eead210bf22e1ce05358b5a1b8a4245', '2022-01-31 06:56:45', '2022-01-31 07:33:26', NULL, '103.98.240.94', '', '90e172b4-01ba-4b42-8faa-b11ad1e9d488', '云盘服务', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (174, 'young-flybirds-oauth-dev.yml', 'DEFAULT_GROUP', '# feign调用超时时间配置\nfeign:\n  client:\n    config:\n      default:\n        connectTimeout: 1000\n        readTimeout: 30000', '674b228a304fa45b42c8c4720c95ab1b', '2022-08-18 08:25:12', '2022-08-18 08:25:12', NULL, '120.234.167.130', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (175, 'young-flybirds-system-dev.yml', 'DEFAULT_GROUP', 'spring:\n  # 163邮箱服务\n  mail:\n    host: smtp.163.com\n    port:\n    username: haxdjf1917@163.com\n    password: KDBHRNXCG\n    protocol: smtp\n    default-encoding: UTF-8\n    properties:\n      mail.smtp.auth: true\n      mail.smtp.starttls.enable: true\n      mail.smtp.starttls.required: true\n      mail.smtp.socketFactory.port: 465\n      mail.smtp.socketFactory.class: javax.net.ssl.SSLSocketFactory\n      mail.smtp.socketFactory.fallback: false\n\n#web端配置\nflybirds:\n  platform:\n    front:\n      baseUrl: http://${flybirds.ip.host}:80/\n      resetPwdUrl: http://${flybirds.ip.host}:80/forget/password?code={}&email={}\n      updateEmailUrl: http://${flybirds.ip.host}:80/account/validate?type=updateEmail&code={}&email={}\n# open-fengin hystrix 配置更改     \nfeign:\n  hystrix:\n    enabled: true\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          thread:\n            timeoutInMilliseconds: 60000\n          strategy: SEMAPHORE\n# 第三方登录\njustauth:\n  enabled: true\n  type:\n    GITEE: # Gitee中的redirect-uri必须配置，获取token的需要，否侧出现401无权限\n      client-id: 867d99ce26de149348b8ae3\n      client-secret: bb5b3a7361be57be772dbe780300\n      ignore-check-redirect-uri: true\n      redirect-uri: http://119.91.25.140/social-login?type=10\n      scopes:\n        - user_info\n        - emails\n  cache:\n    type: REDIS\n    prefix: \'social_auth_state:\' # 缓存前缀，目前只对 Redis 缓存生效，默认 JUSTAUTH::STATE::\n    timeout: 24h # 超时时长，目前只对 Redis 缓存生效，默认 3 分钟', '755a352470b716b2d0a6101921499659', '2022-08-18 08:25:12', '2022-08-19 08:39:40', NULL, '120.234.167.130', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (176, 'young-flybirds-gateway-dev.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:\n    gateway:\n      discovery:\n       locator:\n         #动态路由，根据服务的名称转发到对应的微服务中\n         enabled: true #是否开启基于服务发现的路由规则\n         lower-case-service-id: true #是否服务名小写\n      routes:\n        # 系统模块\n        - id: young-flybirds-system\n          uri: lb://young-flybirds-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n            - name: RequestRateLimiter\n              args:\n                redis-rate-limiter.replenishRate: 1 # 令牌桶每秒填充速率\n                redis-rate-limiter.burstCapacity: 100 # 令牌桶总容量\n                key-resolver: \"#{@pathKeyResolver}\" # 使用 SpEL 表达式按名称引用 bean\n         # sms短信模块\n        - id: young-flybirds-sms\n          uri: lb://young-flybirds-sms\n          predicates:\n            - Path=/sms/**\n          filters:\n            - StripPrefix=1\n            - name: RequestRateLimiter\n              args:\n                redis-rate-limiter.replenishRate: 1 # 令牌桶每秒填充速率\n                redis-rate-limiter.burstCapacity: 100 # 令牌桶总容量\n                key-resolver: \"#{@pathKeyResolver}\" # 使用 SpEL 表达式按名称引用 bean\n         # sms短信模块\n        - id: young-flybirds-oss\n          uri: lb://young-flybirds-oss\n          predicates:\n            - Path=/oss/**\n          filters:\n            - StripPrefix=1\n            - name: RequestRateLimiter\n              args:\n                redis-rate-limiter.replenishRate: 1 # 令牌桶每秒填充速率\n                redis-rate-limiter.burstCapacity: 100 # 令牌桶总容量\n                key-resolver: \"#{@pathKeyResolver}\" # 使用 SpEL 表达式按名称引用 bean\n        # 认证模块\n        - id: young-flybirds-oauth\n          uri: lb://young-flybirds-oauth\n          predicates:\n            - Path= /oauth2/**\n          filters:\n            # 配置工厂过滤器\n            - CacheRequestFilter\n            - VerificationCodeFilter\n            - StripPrefix=1\n            - name: BlackListUrlFilter\n              args:\n                blacklistUrl:\n                 - /oauth/*\n    #配置RSA的公钥访问地址\n    security:\n      oauth2:\n        resourceserver:\n          jwt:\n            jwk-set-uri: \'http://localhost:9006/rsa/publicKey\'\n# 支持sentinel的熔断降级\nfeign:\n  sentinel:\n    enabled: true\n# 设置ribbon的超时时长\nribbon:\n  ReadTimeout: 4000\n  ConnectTimeout: 4000\n\n#白名单\nignore:\n  name: flybirds网关白名单 \n  whites:\n    # 登录\n    - /actuator/**\n    - /oauth/**\n    - /oauth2/**\n    - /code\n    # 系统\n    - /register/**\n    - /retrieve/**\n    - /tenant/open/**\n    - /social/open/**\n    # 其他\n    - /*/v2/api-docs\n    - /csrf', 'd04129864d28668e745a2d5cd28889ca', '2022-08-18 08:25:12', '2022-08-18 08:25:12', NULL, '120.234.167.130', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (177, 'young-flybirds-sms-dev.yml', 'DEFAULT_GROUP', 'aliyun:\n  accessKeyId: \n  accessKeySecret: \n\n#swagger-ui文档配置   \nswagger:\n  title: ${spring.application.name}模块接口文档\n  license: Powered By flybirds\n  licenseUrl: https://io.flybirds.com\n  authorization:\n    name: flybirds-oauth\n    auth-regex: ^.*$\n    authorization-scope-list:\n      - scope: web_service\n        description: 客户端认证系统服务\n    token-url-list:\n      - http://${flybirds.ip.host}:9903/oauth/login\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'', '897429709f4ce25b382f1752679bb838', '2022-08-18 08:25:12', '2022-08-18 08:25:12', NULL, '120.234.167.130', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (178, 'young-flybirds-monitor-dev.yml', 'DEFAULT_GROUP', '# spring\nspring: \n  security:\n    user:\n      name: flybirds\n      password: flybirds@123\n  boot:\n    admin:\n      ui:\n        title: YOUNG-FBIRD 服务状态监控', 'bdc71f37175e3613d9e58f7e95949850', '2022-08-18 08:25:12', '2022-08-19 02:29:54', NULL, '120.234.167.130', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (179, 'young-flybirds-oss-dev.yml', 'DEFAULT_GROUP', '## 本地文件上传    \r\nfile:\r\n  domain: http://${flybirds.ip.host}:9300\r\n  path: D:/ruoyi/uploadPath\r\n  prefix: /statics\r\n\r\n# FastDFS配置\r\nfdfs:\r\n  domain: http://${flybirds.ip.fdfs}\r\n  soTimeout: 3000\r\n  connectTimeout: 2000\r\n  trackerList: ${flybirds.ip.fdfs}:22122\r\n# minio配置\r\n\r\nminio:\r\n  url: http://${flybirds.ip.minio}:9000\r\n  accessKey: admin\r\n  secretKey: admin123456\r\n  bucketName: flybirdstest  ', 'b43ec7e9ee7f87bb3e5d91dc0d9e25a6', '2022-08-18 08:25:12', '2022-08-18 08:25:12', NULL, '120.234.167.130', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (180, 'young-application-dev.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    database: 0\n    host: ${flybirds.ip.redis}\n    port: 6379\n    password: ${flybirds.password.redis}\n    timeout: 6000ms  # 连接超时时长（毫秒）\n    jedis:\n      pool:\n        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）\n        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）\n        max-idle: 10      # 连接池中的最大空闲连接\n        min-idle: 5       # 连接池中的最小空闲连接\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: ${flybirds.user.druid}\n        loginPassword: ${flybirds.password.druid}\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,wall,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            name: ${platform.info.datasource-master}\n            url: jdbc:mysql://${flybirds.ip.mysql}:3306/${spring.datasource.dynamic.datasource.master.name}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&nullCatalogMeansCurrent=true\n            username: ${flybirds.user.mysql}\n            password: ${flybirds.password.mysql}\n\n# mybatis-plus配置文\nmybatis-plus:\n  # 对应的 XML 文件位置\n  mapperLocations: classpath*:/com/flybirds/**/mapper/xml/*.xml\n  # 实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.flybirds.**.entity\n  # 针对 typeAliasesPackage，如果配置了该属性，则仅仅会扫描路径下以该类作为父类的域对象\n  #typeAliasesSuperType: Class<?>\n  # 如果配置了该属性，SqlSessionFactoryBean 会把该包下面的类注册为对应的 TypeHandler\n  #typeHandlersPackage: null\n  # 如果配置了该属性，会将路径下的枚举类进行注入，让实体类字段能够简单快捷的使用枚举属性\n  #typeEnumsPackage: null\n  # 启动时是否检查 MyBatis XML 文件的存在，默认不检查\n  checkConfigLocation: false\n  # 通过该属性可指定 MyBatis 的执行器，MyBatis 的执行器总共有三种：\n  # SIMPLE：该执行器类型不做特殊的事情，为每个语句的执行创建一个新的预处理语句（PreparedStatement）\n  # REUSE：该执行器类型会复用预处理语句（PreparedStatement）\n  # BATCH：该执行器类型会批量执行所有的更新语句\n  executorType: SIMPLE\n  # 指定外部化 MyBatis Properties 配置，通过该配置可以抽离配置，实现不同环境的配置部署\n  configurationProperties: null\n  configuration:\n    # 自动驼峰命名规则（camel case）映射\n    # 如果您的数据库命名符合规则无需使用 @TableField 注解指定数据库字段名\n    mapUnderscoreToCamelCase: true\n    # 默认枚举处理类,如果配置了该属性,枚举将统一使用指定处理器进行处理\n    # org.apache.ibatis.type.EnumTypeHandler : 存储枚举的名称\n    # org.apache.ibatis.type.EnumOrdinalTypeHandler : 存储枚举的索引\n    # com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler : 枚举类需要实现IEnum接口或字段标记@EnumValue注解\n    defaultEnumTypeHandler: org.apache.ibatis.type.EnumTypeHandler\n    # 当设置为 true 的时候，懒加载的对象可能被任何懒属性全部加载，否则，每个属性都按需加载。需要和 lazyLoadingEnabled 一起使用。\n    aggressiveLazyLoading: true\n    # MyBatis 自动映射策略\n    # NONE：不启用自动映射\n    # PARTIAL：只对非嵌套的 resultMap 进行自动映射\n    # FULL：对所有的 resultMap 都进行自动映射\n    autoMappingBehavior: PARTIAL\n    # MyBatis 自动映射时未知列或未知属性处理策\n    # NONE：不做任何处理 (默认值)\n    # WARNING：以日志的形式打印相关警告信息\n    # FAILING：当作映射失败处理，并抛出异常和详细信息\n    autoMappingUnknownColumnBehavior: NONE\n    # Mybatis一级缓存，默认为 SESSION\n    # SESSION session级别缓存，同一个session相同查询语句不会再次查询数据库\n    # STATEMENT 关闭一级缓存\n    localCacheScope: SESSION\n    # 开启Mybatis二级缓存，默认为 true\n    cacheEnabled: true\n  global-config:\n    # 是否打印 Logo banner\n    banner: true\n    # 是否初始化 SqlRunner\n    enableSqlRunner: false\n    dbConfig:\n      # 主键类型\n      # AUTO 数据库ID自增\n      # NONE 空\n      # INPUT 用户输入ID\n      # ASSIGN_ID 全局唯一ID\n      # ASSIGN_UUID 全局唯一ID UUID\n      idType: AUTO\n      # 表名前缀\n      tablePrefix: null\n      # 字段 format,例: %s,(对主键无效)\n      columnFormat: null\n      # 表名是否使用驼峰转下划线命名,只对表名生效\n      tableUnderline: true\n      # 大写命名,对表名和字段名均生效\n      capitalMode: false\n      # 全局的entity的逻辑删除字段属性名\n      logicDeleteField: null\n      # 逻辑已删除值\n      logicDeleteValue: 1\n      # 逻辑未删除值\n      logicNotDeleteValue: 0\n      # 字段验证策略之 insert,在 insert 的时候的字段验证策略\n      # IGNORED 忽略判断\n      # NOT_NULL 非NULL判断\n      # NOT_EMPTY 非空判断(只对字符串类型字段,其他类型字段依然为非NULL判断)\n      # DEFAULT 默认的,一般只用于注解里\n      # NEVER 不加入 SQL\n      insertStrategy: NOT_NULL\n      # 字段验证策略之 update,在 update 的时候的字段验证策略\n      updateStrategy: NOT_NULL\n      # 字段验证策略之 select,在 select 的时候的字段验证策略既 wrapper 根据内部 entity 生成的 where 条件\n      selectStrategy: NOT_NULL\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: true\n  supportMethodsArguments: true\n  params: count=countSql\n\n#全局BASE终端配置\nflybirds:\n  user:\n    mysql: root\n    druid: admin\n  password:\n    mysql: flybirds@123\n    druid: flybirds@123\n    redis: flybirds@123\n  ip:\n    nacos: 120.79.220.218\n    mysql: 120.79.220.218\n    redis: 120.79.220.218\n    host: 119.91.25.140\n    seata: 120.79.220.218\n    fdfs: 120.79.220.218\n    minio: 120.79.220.218\n  info:\n    name: FBIRD 数字化\n    version: 1.0.1.version\n    base-package: com.flybirds\n    copyrightYear: 2022\n    profile: /home/flybirds/data/profile\n    addressEnabled: true\n  xss:\n    enable: false\n    exclude-urls: # 如下两个 url，仅仅是为了演示，去掉配置也没关系\n      - ${spring.boot.admin.context-path}/** # 不处理 Spring Boot Admin 的请求\n      - ${management.endpoints.web.base-path}/** # 不处理 Actuator 的请求\n  # 开启演示模式\n  demo: \n    enable: true\n   \n# Swagger-ui 文档配置   \nswagger:\n  title: ${spring.application.name} 模块接口文档\n  license: Powered By flybirds\n  licenseUrl: https://io.flybirds.com\n  authorization:\n    name: flybirds-oauth\n    auth-regex: ^.*$\n    authorization-scope-list:\n      - scope: web_service\n        description: 客户端认证系统服务\n    token-url-list:\n      - http://${flybirds.ip.host}:9903/oauth2/token/login\n \n# Springboot-Admin 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'', 'acf4e820a9d761f0bbce7557c2ba0600', '2022-08-18 08:25:12', '2022-08-18 11:48:29', NULL, '112.96.50.124', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (181, 'young-sentinel-degrade-gateway.json', 'DEFAULT_GROUP', '[\n    {\n        \"resource\": \"young-flybirds-system\",\n        \"count\": 500,\n        \"grade\": 0,\n        \"timeWindow\": 10,\n        \"minRequestAmount\": 100,\n        \"statIntervalMs\": 1000,\n        \"slowRatioThreshold\": 0.5\n    },\n    {\n        \"resource\": \"young-flybirds-sms\",\n        \"count\": 500,\n        \"grade\": 0,\n        \"timeWindow\": 10,\n        \"minRequestAmount\": 100,\n        \"statIntervalMs\": 1000,\n        \"slowRatioThreshold\": 0.5\n    },\n    {\n        \"resource\": \"young-flybirds-oauth\",\n        \"count\": 500,\n        \"grade\": 0,\n        \"timeWindow\": 10,\n        \"minRequestAmount\": 100,\n        \"statIntervalMs\": 1000,\n        \"slowRatioThreshold\": 0.5\n    },\n     {\n        \"resource\": \"young-flybirds-oss\",\n        \"count\": 500,\n        \"grade\": 0,\n        \"timeWindow\": 10,\n        \"minRequestAmount\": 100,\n        \"statIntervalMs\": 1000,\n        \"slowRatioThreshold\": 0.5\n    }\n]', 'f4bf03d0a94d8e0a91e14395b71fc52e', '2022-08-18 08:25:12', '2022-08-18 08:25:12', NULL, '120.234.167.130', '', '', NULL, NULL, NULL, 'json', NULL);
INSERT INTO `config_info` VALUES (182, 'young-sentinel-flow-gateway.json', 'DEFAULT_GROUP', '[\n    {\n        \"resource\": \"young-flybirds-oauth\", \n        \"count\": 500,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"young-flybirds-system\",\n        \"count\": 1000,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n    {\n        \"resource\": \"young-flybirds-sms\",\n        \"count\": 300,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n    {\n        \"resource\": \"young-flybirds-oss\",\n        \"count\": 300,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    }\n]', '099aee9ab4dcb25a20a565ac1b2e6ba0', '2022-08-18 08:25:12', '2022-08-18 08:25:12', NULL, '120.234.167.130', '', '', NULL, NULL, NULL, 'json', NULL);

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime(0) NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id`, `group_id`, `tenant_id`, `datum_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '增加租户字段' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_beta' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id`, `group_id`, `tenant_id`, `tag_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_tag' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint(20) NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint(20) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id`, `tag_name`, `tag_type`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_tag_relation' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of group_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint(64) UNSIGNED NOT NULL,
  `nid` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create`) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified`) USING BTREE,
  INDEX `idx_did`(`data_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 206 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '多租户改造' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `role` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `resource` varchar(512) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `action` varchar(8) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  UNIQUE INDEX `uk_role_permission`(`role`, `resource`, `action`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of permissions
-- ----------------------------

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `role` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  UNIQUE INDEX `uk_username_role`(`username`, `role`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of roles
-- ----------------------------

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '租户容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint(20) NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint(20) NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp`, `tenant_id`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 9 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'tenant_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------
INSERT INTO `tenant_info` VALUES (1, '1', '8f40f317-b4b1-40fa-a529-11c7f3b18701', 'flybirds-seata', 'seata分布式事务', 'nacos', 1641613711365, 1641613711365);
INSERT INTO `tenant_info` VALUES (2, '1', '3f57c3a5-7575-4766-9ff3-51fc357a783f', 'flybirds-gateway', '网关服务', 'nacos', 1641657756535, 1641657756535);
INSERT INTO `tenant_info` VALUES (3, '1', 'ce265606-207f-4d35-bfc4-2ff99c525ac0', 'flybirds-oauth', 'oauth2.0认证服务', 'nacos', 1641659092269, 1641659092269);
INSERT INTO `tenant_info` VALUES (4, '1', 'a83602ef-7576-4b2f-a014-88db9b28c2d4', 'flybirds-system', '系统服务', 'nacos', 1641703570630, 1641703570630);
INSERT INTO `tenant_info` VALUES (5, '1', '98aa14c2-68b9-4df9-aa79-29797f685eca', 'flybirds-sms', '短信服务', 'nacos', 1642599472295, 1642599472295);
INSERT INTO `tenant_info` VALUES (6, '1', 'a60bdedd-f0e3-46f6-89fd-bb18f38f1d11', 'flybirds-generate', '代码生成器服务', 'nacos', 1642601172444, 1642601172444);
INSERT INTO `tenant_info` VALUES (7, '1', '5efd17b7-9619-4adf-99f2-6d25417e532e', 'flybirds-mangefile', '文件服务', 'nacos', 1642683436166, 1642683436166);
INSERT INTO `tenant_info` VALUES (8, '1', '90e172b4-01ba-4b42-8faa-b11ad1e9d488', 'flybirds-oss', '云盘服务', 'nacos', 1643611934942, 1643611934942);

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `password` varchar(500) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$fgqBvEIJlE37PM26fyw.Xufy8zQnfY806baPMD9RkRuJ/DP0rISs2', 1);
INSERT INTO `users` VALUES ('test', '$2a$10$.D6al8uE1kJ8uJsatoKlh.pYIcmdQWqB84x7YzN2L9raOK7TABAHq', 1);

SET FOREIGN_KEY_CHECKS = 1;
